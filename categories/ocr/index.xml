<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OCR on Petrichor&#39;s blog</title>
    <link>https://chenyongda2018.github.io/categories/ocr/</link>
    <description>Recent content in OCR on Petrichor&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 May 2019 20:25:04 +0800</lastBuildDate><atom:link href="https://chenyongda2018.github.io/categories/ocr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>记一次在Android中调用百度的OCR接口的经历</title>
      <link>https://chenyongda2018.github.io/posts/android/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%9C%A8android%E4%B8%AD%E8%B0%83%E7%94%A8%E7%99%BE%E5%BA%A6%E7%9A%84ocr%E6%8E%A5%E5%8F%A3%E7%9A%84%E7%BB%8F%E5%8E%86/</link>
      <pubDate>Fri, 10 May 2019 20:25:04 +0800</pubDate>
      
      <guid>https://chenyongda2018.github.io/posts/android/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%9C%A8android%E4%B8%AD%E8%B0%83%E7%94%A8%E7%99%BE%E5%BA%A6%E7%9A%84ocr%E6%8E%A5%E5%8F%A3%E7%9A%84%E7%BB%8F%E5%8E%86/</guid>
      <description>前言 最近实验室开了个新项目，是一个通过扫描单词后把扫描过的单词生成游戏来让小朋友记单词的APP，扫描单词这个功能需要用到OCR.
现在常用的OCR有
Tesseract 这个用的人比较多，而且开源，目前google正在维护，但是我尝试了一下，发现识别准确率不是特别理想。
微软的Azure上的认知服务 识别率很高，但是收费，现在有1元体验的套餐，而且不需要验证信用卡，感兴趣的同学可以试试。
百度的文字识别 之所以用这个是因为免费，不过有每天的限制次数，对于学生项目来说够用，还要什么自行车。
下面进入正文
如何在Android 中调用百度的OCR进行文字识别 1.获取百度文字识别产品服务的 Ak/Sk 1.在百度AI开放平台中进入控制台
2.找到文字识别 产品服务
3,创建应用
4,填写信息，注意这里的包名一定要和项目的包名一致
5.获得AK/SK
6.下载license文件，在项目中如果直接用AK/SK明文调用百度的OCR，很不安全，可能会被别人反编译之后获得你的AK.SK
license文件集成了AK/SK 放在项目中可以防止别人破解。 7.下载之后将获得的api.license文件放入main目录下的assets目录中
2.添加百度OCR的SDK到项目中 1.下载 百度OCR的android Sdk
2.下载的SDK压缩包将其解压，并将libs下的ocr-sdk的jar包放入项目的libs目录下 3.在main目录下新建jniLibs目录，并将libs文件夹中的其他文件放入其中
4.在app下的build,gradle中添加
将添加在libs下的sdk JAR包编译
5.这里下载的压缩包中包括了百度提供的相机扫描时的UI，在拍完照有裁剪框，比较方便，这里我们可以作为module引入项目中 3.调用百度OCR 做完准备工作我们就可以开始调用百度的OCR接口了。
首先在我们需要进行识别的页面所在的文件中创建 根据License文件初始化OCR实例的函数，并在onCreate()方法中调用
/** * 自定义license的文件路径和文件名称，以license文件方式初始化 */ private void initAccessTokenLicenseFile() { OCR.getInstance(mActivity.getApplicationContext()).initAccessToken(new OnResultListener&amp;lt;AccessToken&amp;gt;() { @Override public void onResult(AccessToken accessToken) { String token = accessToken.getAccessToken(); Log.d(TAG,token); hasGotToken = true; } @Override public void onError(OCRError error) { error.</description>
    </item>
    
  </channel>
</rss>
