<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EventBus on Petrichor&#39;s blog</title>
    <link>https://chenyongda2018.github.io/tags/eventbus/</link>
    <description>Recent content in EventBus on Petrichor&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Jan 2023 20:29:31 +0800</lastBuildDate>
    <atom:link href="https://chenyongda2018.github.io/tags/eventbus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EventBus使用详解及源码解析</title>
      <link>https://chenyongda2018.github.io/posts/android/eventbus%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3%E5%8F%8A%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Thu, 05 Jan 2023 20:29:31 +0800</pubDate>
      <guid>https://chenyongda2018.github.io/posts/android/eventbus%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3%E5%8F%8A%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;p&gt;EventBus是一个消息订阅/发布的开源框架。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/15/16e6cfac7adeac21~tplv-t2oaga2asx-image.image&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如上图所示 , EventBus框架中主要有2个角色 :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Publisher : 发布消息的, 被观察者&lt;/li&gt;&#xA;&lt;li&gt;Subscriber : 接收消息的 , 观察者&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;Publisher(被观察者)&lt;/code&gt; 通过 &lt;code&gt;post()&lt;/code&gt; 将一个事件/消息(&lt;code&gt;Event&lt;/code&gt;) 发送到事件的集中地,也就是图中的 &lt;code&gt;EventBus&lt;/code&gt; ，&lt;code&gt;EventBus&lt;/code&gt; 再将事件/消息(&lt;code&gt;Event&lt;/code&gt;)发给&lt;code&gt;Subcriber&lt;/code&gt;观察者。&lt;/p&gt;&#xA;&lt;p&gt;使用这样的框架，能够使Activity/Fragment等组件之间的通信简化 , 不用再像以前一直使用 &lt;code&gt;intent&lt;/code&gt; 来传送数据 , 从而提升开发效率。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1配置依赖&#34;&gt;1.配置依赖&lt;/h2&gt;&#xA;&lt;p&gt;在app层的 &lt;code&gt;build.gradle&lt;/code&gt; 中添加 :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;implementation &amp;#39;org.greenrobot:eventbus:3.1.1&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2初步使用&#34;&gt;2.初步使用&lt;/h2&gt;&#xA;&lt;p&gt;根据官方文档 , 首先要定义一个&lt;code&gt;Event(消息)&lt;/code&gt;的POJO类 :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;MessageEvent&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;private&lt;/span&gt;  String message ;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;MessageEvent&lt;/span&gt;(String message) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.message &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; message;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#268bd2&#34;&gt;getMessage&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;return&lt;/span&gt; message;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#dc322f&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;setMessage&lt;/span&gt;(String message) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.message &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; message;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后 , 我们要明确哪个组件是 &lt;code&gt;Subsriber(观察者)&lt;/code&gt;,  哪个组件是&lt;code&gt;Publisher(被观察者)&lt;/code&gt; ,  在这里 , 我们通过EventBus演示一个传送消息的demo。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
